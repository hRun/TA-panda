[panda:edr]
# Parsing
NO_BINARY_CHECK = true
category        = Network & Security
description     = Logs from Panda EDR
pulldown_type   = true
TZ              = UTC

# General
FIELDALIAS-category  = Cat AS category
FIELDALIAS-src       = identHostName AS src_host identSrc AS src_ip
FIELDALIAS-user      = usrName AS user
FIELDALIAS-severity  = sev AS severity
FIELDALIAS-operation = Op AS operation
FIELDALIAS-hash      = Hash AS hash
FIELDALIAS-uid       = MUID AS machine_unique_identifier
EVAL-action          = case(vendor_event=="loginoutpos" AND EventCode=0, "success", vendor_event=="loginoutops" AND EventCode!=0, "failure", isnotnull(RegAction), RegAction, Action=="Allow", "allowed", Action=="Block", "blocked", Action=="Quarantine", "deferred", Action=="BlockTimeout", "failed", true(), null())
EVAL-vendor_action   = case(Action=="Allow", "allowed", Action=="Block", "blocked", Action=="BlockTimeout", "failed", true(), "unknown")
EXTRACT-header       = [^\|]*\|(?<vendor_product>[^\|]*)\|[^\|]*\|(?<product_version>[^\|]*)\|(?<vendor_event>[^\|]*)\|

# Installation related
FIELDALIAS-install = MachineIP0 AS src_ip

# Authentication related
FIELDALIAS-auth = User AS user RemoteMachineName AS dest RemoteIP AS dest_ip RemotePort AS dest_port

# Registry related
EXTRACT-registry         = \tRegKey\=(?<registry_path>.*?)[\?$\t\r\n](?<registry_value_name>.*?)(\\\=|$|\r|\n|\t)(?<registry_value_text>.*)
REPORT-registry_key_name = registry_key_name
FIELDALIAS-registry_path = Key AS registry_path 
EVAL-registry_value_text = case(vendor_event=="monitoredregistry", mvjoin(mvindex(split(ValueData, ":"), 1, -1), ":"), isnotnull(registry_value_text) AND len(registry_value_text)>0, registry_value_text, true(), TagretPath)
EVAL-registry_key_name   = if(vendor_event=="monitoredregistry", mvindex(split(Key, "\\"), -1), registry_key_name)
EVAL-registry_value_name = if(vendor_event=="monitoredregistry", Value, registry_value_name)
EVAL-registry_value_type = mvindex(split(ValueData, ":"), 0)

# Download related
FIELDALIAS-url = URL AS url

# Process related
EXTRACT-cmd       = \tParams\=(?<process>.*?)\t
EVAL-process_id   = case(vendor_event=="monitoredopen", ParentPID, vendor_event=="createpe" OR vendor_event=="deletepe" OR vendor_event=="createdir" OR vendor_event=="createcmp" OR vendor_event=="opencmp" OR vendor_event=="urldownload" OR vendor_event=="monitoredregistry", ParentPid, vendor_event=="dnsops", ProcessPid, vendor_event=="processnetbytes", PID, vendor_event=="socket", Pid, true(), ChildPid)
EVAL-process_hash = case(vendor_event=="monitoredopen" OR vendor_event=="createpe" OR vendor_event=="deletepe" OR vendor_event=="createdir" OR vendor_event=="createcmp" OR vendor_event=="opencmp" OR vendor_event=="urldownload" OR vendor_event=="monitoredregistry", ParentHash, vendor_event=="dnsops", ProcessMD5, vendor_event=="hostfiles" OR vendor_event=="processnetbytes", Hash, true(), ChildHash)
EVAL-process_path = case(vendor_event=="monitoredopen" OR vendor_event=="createpe" OR vendor_event=="deletepe" OR vendor_event=="createdir" OR vendor_event=="createcmp" OR vendor_event=="opencmp" OR vendor_event=="urldownload" OR vendor_event=="monitoredregistry", ParentPath, vendor_event=="dnsops", ProcessPath, vendor_event=="hostfiles" OR vendor_event=="processnetbytes" OR vendor_event=="socket", Path, true(), ChildPath)
EVAL-process_exec = case(vendor_event=="monitoredopen" OR vendor_event=="createpe" OR vendor_event=="deletepe" OR vendor_event=="createdir" OR vendor_event=="createcmp" OR vendor_event=="opencmp" OR vendor_event=="urldownload" OR vendor_event=="monitoredregistry", mvindex(split(ParentPath, "\\"), -1), vendor_event=="dnsops", mvindex(split(ProcessPath, "\\"), -1), vendor_event=="hostfiles" OR vendor_event=="processnetbytes" OR vendor_event=="socket", mvindex(split(Path, "\\"), -1), true(), mvindex(split(ChildPath, "\\"), -1))
EVAL-process_name = case(vendor_event=="monitoredopen" OR vendor_event=="createpe" OR vendor_event=="deletepe" OR vendor_event=="createdir" OR vendor_event=="createcmp" OR vendor_event=="opencmp" OR vendor_event=="urldownload" OR vendor_event=="monitoredregistry", mvindex(split(ParentPath, "\\"), -1), vendor_event=="dnsops", mvindex(split(ProcessPath, "\\"), -1), vendor_event=="hostfiles" OR vendor_event=="processnetbytes" OR vendor_event=="socket", mvindex(split(Path, "\\"), -1), true(), mvindex(split(ChildPath, "\\"), -1))
EVAL-parent_process_id  = case(vendor_event=="monitoredopen" OR vendor_event=="createpe" OR vendor_event=="deletepe" OR vendor_event=="createdir" OR vendor_event=="createcmp" OR vendor_event=="opencmp" OR vendor_event=="urldownload" OR vendor_event=="monitoredregistry", null(), true(), ParentPid)
EVAL-parent_process_hash = case(vendor_event=="monitoredopen" OR vendor_event=="createpe" OR vendor_event=="deletepe" OR vendor_event=="createdir" OR vendor_event=="createcmp" OR vendor_event=="opencmp" OR vendor_event=="urldownload" OR vendor_event=="monitoredregistry", null(), true(), ParentHash)
EVAL-parent_process_path = case(vendor_event=="monitoredopen" OR vendor_event=="createpe" OR vendor_event=="deletepe" OR vendor_event=="createdir" OR vendor_event=="createcmp" OR vendor_event=="opencmp" OR vendor_event=="urldownload" OR vendor_event=="monitoredregistry", null(), true(), ParentPath)
EVAL-parent_process_exec = case(vendor_event=="monitoredopen" OR vendor_event=="createpe" OR vendor_event=="deletepe" OR vendor_event=="createdir" OR vendor_event=="createcmp" OR vendor_event=="opencmp" OR vendor_event=="urldownload" OR vendor_event=="monitoredregistry", null(), true(), mvindex(split(ParentPath, "\\"), -1))
EVAL-parent_process_name = case(vendor_event=="monitoredopen" OR vendor_event=="createpe" OR vendor_event=="deletepe" OR vendor_event=="createdir" OR vendor_event=="createcmp" OR vendor_event=="opencmp" OR vendor_event=="urldownload" OR vendor_event=="monitoredregistry", null(), true(), mvindex(split(ParentPath, "\\"), -1))

#Service related
EVAL-service_dll                  = if(like(ChildImageType,"DLL%"), mvindex(split(ChildPath, "\\"), -1), null())
EVAL-service_dll_path             = if(like(ChildImageType,"DLL%"), ChildPath, null())
EVAL-service_dll_hash             = if(like(ChildImageType,"DLL%"), ChildHash, null())
EVAL-service_dll_signature_exists = if(like(ChildImageType,"DLL%"), ChildValidSig, null())

# Filesystem related
FIELDALIAS-file = Size AS file_size
EVAL-file_name = case(vendor_event=="criticalsoft", FileName, vendor_event=="monitoredopen" OR vendor_event=="loadlib" OR vendor_event=="renamepe" OR vendor_event=="createpe" OR vendor_event=="deletepe" OR vendor_event=="createdir" OR vendor_event=="createcmp" OR vendor_event=="opencmp", mvindex(split(ChildPath, "\\"), -1), vendor_event=="registrym", mvindex(split(Path, "\\"), -1), vendor_event=="urldownload", mvindex(split(mvindex(split(URL, "/"), -1), "?"), 0), vendor_event=="exec" AND Action=="Quarantine", mvindex(split(ChildPath, "\\"), -1), true(), null())
EVAL-file_path = case(vendor_event=="criticalsoft", FilePath, vendor_event=="monitoredopen" OR vendor_event=="loadlib" OR vendor_event=="renamepe" OR vendor_event=="createpe" OR vendor_event=="deletepe" OR vendor_event=="createdir" OR vendor_event=="createcmp" OR vendor_event=="opencmp", ChildPath, vendor_event=="registrym", Path, vendor_event=="exec" AND Action=="Quarantine", ChildPath, true(), null())
EVAL-file_hash = case(vendor_event=="criticalsoft", ItemHash, vendor_event=="renamepe" OR vendor_event=="loadlib" OR vendor_event=="createpe" OR vendor_event=="deletepe" OR vendor_event=="createdir" OR vendor_event=="createcmp" OR vendor_event=="opencmp" OR vendor_event=="urldownload", ChildHash, vendor_event=="registrym", Hash, vendor_event=="exec" AND Action="Quarantine", ChildHash, true(), null())
EVAL-signature = coalesce(MWName, ParentMWName, ChildMWName, if(Action=="Quarantine", mvindex(split(ChildPath, "\\"), -1), null()))

# Port / Network related
FIELDALIAS-bytes = BytesSent AS bytes_out BytesReceived AS bytes_in
EVAL-dest        = case(isnotnull(Op), identHostName, vendor_event=="socket", mvindex(split(Hostname, ":"), 0), vendor_event=="urldownload", mvindex(split(URL, "/"), 2), true(), null())
EVAL-dest_ip     = case(Direction=="Up", IP, Direction=="Down", LocalIp, true(), dest_ip)
EVAL-dest_port   = case(Direction=="Up", Port, Direction=="Down", LocalPort, true(), dest_port)
EVAL-src_ip      = case(Direction=="Up", LocalIp, Direction=="Down", IP, vendor_event=="loginoutops", src, true(), src_ip)
EVAL-src_port    = case(Direction=="Up", LocalPort, Direction=="Down", Port, true(), src_port)
EVAL-protocol    = lower(Protocol)
EVAL-transport   = lower(Protocol)

